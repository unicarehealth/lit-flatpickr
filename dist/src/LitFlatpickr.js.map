{"version":3,"file":"LitFlatpickr.js","sourceRoot":"","sources":["../../src/LitFlatpickr.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement, property, customElement, css } from 'lit-element';\r\nimport 'flatpickr';\r\nimport { FlatpickrTheme } from './styles/Themes';\r\nimport StyleLoader from './StyleLoader';\r\nimport { DateLimit, DateOption, Hook, Options, ParsedOptions } from 'flatpickr/dist/types/options';\r\nimport { Locale } from 'flatpickr/dist/types/locale';\r\nimport { Instance } from 'flatpickr/dist/types/instance';\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\ndeclare const flatpickr: any;\r\n\r\n@customElement('lit-flatpickr')\r\nexport class LitFlatpickr extends LitElement {\r\n  /**\r\n   * Exactly the same as date format, but for the altInput field\r\n   * @prop\r\n   * @type string\r\n   **/\r\n  @property({ type: String })\r\n  altFormat = 'F j, Y';\r\n  /**\r\n   * Show the user a readable date (as per altFormat), but return something totally different to the server.\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  altInput = false;\r\n  /**\r\n   * This class will be added to the input element created by the altInput option.\r\n   * Note that altInput already inherits classes from the original input.\r\n   * @prop\r\n   * @type string\r\n   * */\r\n  @property({ type: String })\r\n  altInputClass = '';\r\n  /**\r\n   * Allows the user to enter a date directly input the input field. By default, direct entry is disabled.\r\n   * @prop\r\n   * @type boolean\r\n   **/\r\n  @property({ type: Boolean })\r\n  allowInput = false;\r\n  /**\r\n   * Defines how the date will be formatted in the aria-label for calendar days, using the same tokens as dateFormat.\r\n   * If you change this, you should choose a value that will make sense if a screen reader reads it out loud\r\n   * @prop\r\n   * @type string\r\n   **/\r\n  @property({ type: String })\r\n  ariaDateFormat = 'F j, Y';\r\n\r\n  /**\r\n   * Whether clicking on the input should open the picker.\r\n   * You could disable this if you wish to open the calendar manually with.open()\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  clickOpens = true;\r\n\r\n  /**\r\n   * A string of characters which are used to define how the date will be displayed in the input box.\r\n   * @prop\r\n   * @type string\r\n   * */\r\n  @property({ type: String })\r\n  dateFormat = 'Y-m-d';\r\n\r\n  /**\r\n   * Sets the initial selected date(s).\r\n   *\r\n   * If you're using mode: \"multiple\" or a range calendar supply an Array of\r\n   * Date objects or an Array of date strings which follow your dateFormat.\r\n   *\r\n   * Otherwise, you can supply a single Date object or a date string.\r\n   * @prop\r\n   * @type {DateOption|DateOption[]}\r\n   * */\r\n  @property({ type: Object })\r\n  defaultDate?: DateOption | DateOption[];\r\n\r\n  /**\r\n   * Initial value of the hour element.\r\n   * @prop\r\n   * @type number\r\n   * */\r\n  @property({ type: Number })\r\n  defaultHour = 12;\r\n\r\n  /**\r\n   * Initial value of the minute element.\r\n   * @prop\r\n   * @type number\r\n   * */\r\n  @property({ type: Number })\r\n  defaultMinute = 0;\r\n\r\n  /**\r\n   * Dates selected to be unavailable for selection.\r\n   * @prop\r\n   * @type DateLimit<DateOption>[]\r\n   * */\r\n  @property({ type: Array })\r\n  disable: DateLimit<DateOption>[] = [];\r\n\r\n  /**\r\n   * Set disableMobile to true to always use the non-native picker.\r\n   * By default, flatpickr utilizes native datetime widgets unless certain options (e.g. disable) are used.\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  disableMobile = false;\r\n\r\n  /**\r\n   * Dates selected to be available for selection.\r\n   * @prop\r\n   * @type DateLimit<DateOption>[]\r\n   * */\r\n  @property({ type: Array })\r\n  enable: DateLimit<DateOption>[] = [];\r\n\r\n  /**\r\n   * Enables time picker\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  enableTime = false;\r\n\r\n  /**\r\n   * Enables seconds in the time picker\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  enableSeconds = false;\r\n\r\n  /**\r\n   * Allows using a custom date formatting function instead of the built-in\r\n   * handling for date formats using dateFormat, altFormat, etc.\r\n   *\r\n   * Function format: (date: Date, format: string, locale: Locale) => string\r\n   *\r\n   * @prop\r\n   * @type Function\r\n   * */\r\n  @property({ type: Object })\r\n  formatDateFn?: (date: Date, format: string, locale: Locale) => string;\r\n\r\n  /**\r\n   * Adjusts the step for the hour input (incl. scrolling)\r\n   * @prop\r\n   * @type number\r\n   * */\r\n  @property({ type: Number })\r\n  hourIncrement = 1;\r\n\r\n  /**\r\n   * Adjusts the step for the minute input (incl. scrolling)\r\n   * @prop\r\n   * @type number\r\n   * */\r\n  @property({ type: Number })\r\n  minuteIncrement = 5;\r\n\r\n  /**\r\n   * Displays the calendar inline\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  inline = false;\r\n\r\n  /**\r\n   * The maximum date that a user can pick to (inclusive).\r\n   * @prop\r\n   * @type DateOption\r\n   * */\r\n  @property({ type: String })\r\n  maxDate?: DateOption;\r\n\r\n  /**\r\n   * The minimum date that a user can pick to (inclusive).\r\n   * @prop\r\n   * @type DateOption\r\n   * */\r\n  @property({ type: String })\r\n  minDate?: DateOption;\r\n\r\n  /**\r\n   * \"single\", \"multiple\", or \"range\"\r\n   * @prop\r\n   * @type {\"single\" | \"multiple\" | \"range\"}\r\n   * */\r\n  @property({ type: String })\r\n  mode: 'single' | 'multiple' | 'range' | 'time' = 'single';\r\n\r\n  /**\r\n   * HTML for the arrow icon, used to switch months.\r\n   * @prop\r\n   * @type string\r\n   * */\r\n  @property({ type: String })\r\n  nextArrow = '>';\r\n\r\n  /**\r\n   * HTML for the arrow icon, used to switch months.\r\n   * @prop\r\n   * @type string\r\n   * */\r\n  @property({ type: String })\r\n  prevArrow = '<';\r\n\r\n  /**\r\n   * Hides the day selection in calendar.\r\n   * Use it along with enableTime to create a time picker.\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  noCalendar = false;\r\n\r\n  /**\r\n   * Function(s) to trigger on every date selection\r\n   * @prop\r\n   * @type Function\r\n   * */\r\n  @property({ type: Object })\r\n  onChange?: Hook;\r\n\r\n  /**\r\n   * Function(s) to trigger every time the calendar is closed\r\n   * @prop\r\n   * @type Function\r\n   * */\r\n  @property({ type: Object })\r\n  onClose?: Hook;\r\n\r\n  /**\r\n   * Function(s) to trigger every time the calendar is opened\r\n   * @prop\r\n   * @type Function\r\n   * */\r\n  @property({ type: Object })\r\n  onOpen?: Hook;\r\n\r\n  /**\r\n   * Function(s) to trigger when the calendar is ready\r\n   * @prop\r\n   * @type Function\r\n   * */\r\n  @property({ type: Object })\r\n  onReady?: Hook;\r\n\r\n  /**\r\n   * Function(s) to trigger every time the calendar month is changed by the user or programmatically\r\n   * @prop\r\n   * @type Function\r\n   * */\r\n  @property({ type: Object })\r\n  onMonthChange?: Hook;\r\n\r\n  /**\r\n   * Function(s) to trigger every time the calendar year is changed by the user or programmatically\r\n   * @prop\r\n   * @type Function\r\n   * */\r\n  @property({ type: Object })\r\n  onYearChange?: Hook;\r\n\r\n  /**\r\n   * Function(s) to trigger when the input value is updated with a new date string\r\n   * @prop\r\n   * @type Function\r\n   * */\r\n  @property({ type: Object })\r\n  onValueUpdate?: Hook;\r\n\r\n  /**\r\n   * Function that expects a date string and must return a Date object.\r\n   *\r\n   * Function format: (date: string, format: string) => string\r\n   *\r\n   * @prop\r\n   * @type Function\r\n   **/\r\n  @property({ type: Object })\r\n  parseDateFn?: (date: string, format: string) => Date;\r\n\r\n  /**\r\n   * Where the calendar is rendered relative to the input\r\n   * @prop\r\n   * @type {\"auto\" | \"above\" | \"below\"}\r\n   * */\r\n  @property({ type: String })\r\n  position: 'auto' | 'above' | 'below' = 'auto';\r\n\r\n  /**\r\n   * Show the month using the shorthand version (ie, Sep instead of September)\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  shorthandCurrentMonth = false;\r\n\r\n  /**\r\n   * The number of months showed\r\n   * @prop\r\n   * @type number\r\n   * */\r\n  @property({ type: Number })\r\n  showMonths = 1;\r\n\r\n  /**\r\n   * Position the calendar inside the wrapper and next to the input element\r\n   * @prop\r\n   * @type boolean\r\n   **/\r\n  @property({ type: Boolean })\r\n  static = false;\r\n\r\n  /**\r\n   * Displays the time picker in 24 hour mode without AM/PM selection when enabled\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  time_24hr = false;\r\n\r\n  /**\r\n   * Enabled display of week numbers in calendar\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  weekNumbers = false;\r\n\r\n  /**\r\n   * flatpickr can parse an input group of textboxes and buttons, common in Bootstrap and other frameworks.\r\n   * This permits additional markup, as well as custom elements to trigger the state of the calendar.\r\n   * @prop\r\n   * @type boolean\r\n   * */\r\n  @property({ type: Boolean })\r\n  wrap = false;\r\n\r\n  /**\r\n   * The set theme of flatpickr.\r\n   * @prop\r\n   * @type { \"light\" | \"dark\" | \"material_blue\" | \"material_red\" | \"material_green\" | \"material_orange\" | \"airbnb\" | \"confetti\" }\r\n   * */\r\n  @property({ type: String })\r\n  theme = 'light';\r\n\r\n  _instance?: Instance;\r\n  _inputElement?: HTMLInputElement;\r\n\r\n  @property({ type: Boolean })\r\n  _hasSlottedElement = false;\r\n\r\n  static get styles() {\r\n    return css`\r\n      :host {\r\n        width: fit-content;\r\n        display: block;\r\n        cursor: text;\r\n        background: #fff;\r\n        color: #000;\r\n        overflow: hidden;\r\n      }\r\n\r\n      input {\r\n        width: 100%;\r\n        height: 100%;\r\n        font-size: inherit;\r\n        cursor: inherit;\r\n        background: inherit;\r\n        box-sizing: border-box;\r\n        outline: none;\r\n        color: inherit;\r\n        border: none;\r\n      }\r\n    `;\r\n  }\r\n\r\n  firstUpdated() {\r\n    this._hasSlottedElement = this.checkForSlottedElement();\r\n  }\r\n\r\n  updated() {\r\n    // TODO: Might not need to init every time updated, but only\r\n    // when relevant stuff changes\r\n    this.init();\r\n  }\r\n\r\n  checkForSlottedElement(): boolean {\r\n    const slottedElem = this.shadowRoot?.querySelector('slot');\r\n    // We don't want to think that a whitespace / line break is a node\r\n    const assignedNodes = slottedElem ? slottedElem.assignedNodes().filter(this.removeTextNodes) : [];\r\n\r\n    return slottedElem != null && assignedNodes && assignedNodes.length > 0;\r\n  }\r\n\r\n  getSlottedElement(): Element | undefined {\r\n    if (!this._hasSlottedElement) {\r\n      return undefined;\r\n    }\r\n    const slottedElem = this.shadowRoot?.querySelector('slot');\r\n    const slottedElemNodes: Array<Node> | undefined = slottedElem?.assignedNodes().filter(this.removeTextNodes);\r\n    if (!slottedElemNodes || slottedElemNodes.length < 1) {\r\n      return undefined;\r\n    }\r\n    return slottedElemNodes[0] as Element;\r\n  }\r\n\r\n  removeTextNodes(node: Node): boolean {\r\n    return node.nodeName !== '#text';\r\n  }\r\n\r\n  async init(): Promise<void> {\r\n    const styleLoader = new StyleLoader(this.theme as FlatpickrTheme);\r\n    await styleLoader.initStyles();\r\n    this.initializeComponent();\r\n  }\r\n\r\n  getOptions(): Options {\r\n    return {\r\n      altFormat: this.altFormat,\r\n      altInput: this.altInput,\r\n      altInputClass: this.altInputClass,\r\n      allowInput: this.allowInput,\r\n      ariaDateFormat: this.ariaDateFormat,\r\n      clickOpens: this.clickOpens,\r\n      dateFormat: this.dateFormat,\r\n      defaultDate: this.defaultDate,\r\n      defaultHour: this.defaultHour,\r\n      defaultMinute: this.defaultMinute,\r\n      disable: this.disable,\r\n      disableMobile: this.disableMobile,\r\n      enable: this.enable,\r\n      enableTime: this.enableTime,\r\n      enableSeconds: this.enableSeconds,\r\n      formatDate: this.formatDateFn,\r\n      hourIncrement: this.hourIncrement,\r\n      inline: this.inline,\r\n      maxDate: this.maxDate,\r\n      minDate: this.minDate,\r\n      minuteIncrement: this.minuteIncrement,\r\n      mode: this.mode,\r\n      nextArrow: this.nextArrow,\r\n      prevArrow: this.prevArrow,\r\n      noCalendar: this.noCalendar,\r\n      onChange: this.onChange,\r\n      onClose: this.onClose,\r\n      onOpen: this.onOpen,\r\n      onReady: this.onReady,\r\n      onMonthChange: this.onMonthChange,\r\n      onYearChange: this.onYearChange,\r\n      onValueUpdate: this.onValueUpdate,\r\n      parseDate: this.parseDateFn,\r\n      position: this.position,\r\n      shorthandCurrentMonth: this.shorthandCurrentMonth,\r\n      showMonths: this.showMonths,\r\n      static: this.static,\r\n      // eslint-disable-next-line @typescript-eslint/camelcase\r\n      time_24hr: this.time_24hr,\r\n      weekNumbers: this.weekNumbers,\r\n      wrap: this.wrap,\r\n    };\r\n  }\r\n\r\n  initializeComponent(): void {\r\n    if (this._instance) {\r\n      if (Object.prototype.hasOwnProperty.call(this, 'destroy')) {\r\n        this._instance.destroy();\r\n      }\r\n    }\r\n\r\n    let inputElement: HTMLInputElement | null;\r\n    if (this._hasSlottedElement) {\r\n      // If lit-flatpickr has a slotted element, it means that\r\n      // the user wants to use their custom input.\r\n      inputElement = this.findInputField();\r\n    } else {\r\n      inputElement = this.shadowRoot?.querySelector('input') as HTMLInputElement;\r\n    }\r\n\r\n    if (inputElement) {\r\n      this._inputElement = inputElement as HTMLInputElement;\r\n      this._instance = flatpickr(inputElement, this.getOptions());\r\n    }\r\n  }\r\n\r\n  findInputField(): HTMLInputElement | null {\r\n    let inputElement: HTMLInputElement | null = null;\r\n    // First we check if the slotted element is just light dom HTML\r\n    inputElement = this.querySelector('input');\r\n    if (inputElement) {\r\n      return inputElement as HTMLInputElement;\r\n    }\r\n    // If not, we traverse down the slotted element's dom/shadow dom until we\r\n    // find a dead-end or an input\r\n    const slottedElement: Element | undefined = this.getSlottedElement();\r\n    if (typeof slottedElement !== undefined) {\r\n      inputElement = this.searchWebComponentForInputElement(slottedElement as Element);\r\n    }\r\n\r\n    return inputElement ? (inputElement as HTMLInputElement) : null;\r\n  }\r\n\r\n  /**\r\n   * Traverse the shadow dom tree and search for input from it\r\n   * and it's children\r\n   * */\r\n  searchWebComponentForInputElement(element: Element): HTMLInputElement | null {\r\n    let inputElement: HTMLInputElement | null = this.getInputFieldInElement(element);\r\n    if (inputElement) return inputElement;\r\n\r\n    const webComponentsInChildren = this.getWebComponentsInsideElement(element);\r\n    for (let i = 0; i < webComponentsInChildren.length; i++) {\r\n      inputElement = this.searchWebComponentForInputElement(webComponentsInChildren[i]);\r\n      if (inputElement) {\r\n        break;\r\n      }\r\n    }\r\n    return inputElement;\r\n  }\r\n\r\n  /**\r\n   * Check if said element's dom tree contains a input element\r\n   * */\r\n  getInputFieldInElement(element: Element): HTMLInputElement | null {\r\n    let inputElement: HTMLInputElement | null = null;\r\n    if (element.shadowRoot) {\r\n      inputElement = element.shadowRoot.querySelector('input');\r\n    } else {\r\n      inputElement = element.querySelector('input');\r\n    }\r\n    return inputElement;\r\n  }\r\n\r\n  getWebComponentsInsideElement(element: Element): Array<Element> {\r\n    if (element.shadowRoot) {\r\n      return [\r\n        ...Array.from(element.querySelectorAll('*')),\r\n        ...Array.from(element.shadowRoot.querySelectorAll('*')),\r\n      ].filter((elem: Element) => elem.shadowRoot);\r\n    } else {\r\n      return Array.from(element.querySelectorAll('*')).filter((elem: Element) => elem.shadowRoot);\r\n    }\r\n  }\r\n\r\n  changeMonth(monthNum: number, isOffset = true): void {\r\n    if (!this._instance) return;\r\n    this._instance.changeMonth(monthNum, isOffset);\r\n  }\r\n\r\n  clear(): void {\r\n    if (!this._instance) return;\r\n    this._instance.clear();\r\n  }\r\n\r\n  close(): void {\r\n    if (!this._instance) return;\r\n    this._instance.close();\r\n  }\r\n\r\n  destroy(): void {\r\n    if (!this._instance) return;\r\n    this._instance.destroy();\r\n  }\r\n\r\n  formatDate(dateObj: Date, formatStr: string): string {\r\n    if (!this._instance) return '';\r\n    return this._instance.formatDate(dateObj, formatStr);\r\n  }\r\n\r\n  jumpToDate(date: Date, triggerChange: boolean) {\r\n    if (!this._instance) return;\r\n    this._instance.jumpToDate(date, triggerChange);\r\n  }\r\n\r\n  open(): void {\r\n    if (!this._instance) return;\r\n    this._instance.open();\r\n  }\r\n\r\n  parseDate(dateStr: string, dateFormat: string): Date | undefined {\r\n    if (!this._instance) return undefined;\r\n    return this._instance.parseDate(dateStr, dateFormat);\r\n  }\r\n\r\n  redraw(): void {\r\n    if (!this._instance) return;\r\n    this._instance.redraw();\r\n  }\r\n\r\n  set(\r\n    option:\r\n      | keyof Options\r\n      | {\r\n          [k in keyof Options]?: Options[k];\r\n        },\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    value?: any\r\n  ): void {\r\n    if (!this._instance) return;\r\n    this._instance.set(option, value);\r\n  }\r\n\r\n  setDate(date: DateOption | DateOption[], triggerChange?: boolean, dateStrFormat?: string): void {\r\n    if (!this._instance) return;\r\n    //Handle second and third parameters as optional:\r\n    if (dateStrFormat !== undefined) {\r\n      this._instance.setDate(date, triggerChange, dateStrFormat);\r\n    }\r\n    else if (triggerChange !== undefined) {\r\n      this._instance.setDate(date, triggerChange);\r\n    }\r\n    this._instance.setDate(date);\r\n  }\r\n\r\n  toggle(): void {\r\n    if (!this._instance) return;\r\n  }\r\n\r\n  getSelectedDates(): Array<Date> {\r\n    if (!this._instance) return [];\r\n    return this._instance.selectedDates;\r\n  }\r\n\r\n  getCurrentYear(): number {\r\n    if (!this._instance) return -1;\r\n    return this._instance.currentYear;\r\n  }\r\n\r\n  getCurrentMonth(): number {\r\n    if (!this._instance) return -1;\r\n    return this._instance.currentMonth;\r\n  }\r\n\r\n  getConfig(): ParsedOptions {\r\n    if (!this._instance) return {} as ParsedOptions;\r\n    return this._instance.config;\r\n  }\r\n\r\n  getValue(): string {\r\n    if (!this._inputElement) return '';\r\n    return this._inputElement.value;\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      ${!this._hasSlottedElement ? html`<input class=\"lit-flatpickr flatpickr flatpickr-input\" />` : html``}\r\n      <slot></slot>\r\n    `;\r\n  }\r\n}\r\n"]}